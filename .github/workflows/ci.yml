name: Splitracker CI

on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.choose_version.outputs.version }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET 6 SDK (for Raven tests)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Set up .NET 7 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Install dependencies
        run: dotnet restore --runtime linux-x64 --locked-mode --verbosity=normal
      - name: Build
        run: dotnet build --configuration=Release --no-restore --verbosity=normal
      - name: Test
        run: dotnet test --configuration=Release --no-restore --no-build --verbosity=normal
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: NUnit Tests
          path: TestResults/*.trx
          reporter: dotnet-trx
      - name: Publish
        run: dotnet publish --configuration=Release --no-build --verbosity=normal
        working-directory: ./Splitracker.Web
      - name: Install doctl
        if: github.event_name != 'pull_request'
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Choose Version
        id: choose_version
        run: |          
          version='1.0.${{ github.run_number }}'
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Push docker image
        if: github.event_name != 'pull_request'
        run: |
          set -x
          doctl registry login
          version=${{ steps.choose_version.outputs.version }}
          tag="registry.digitalocean.com/klauser/splitracker:$version"
          docker tag splitracker-web:1.0.0 "$tag"
          docker push "$tag"
          doctl registry logout
  preview_deployment:
    name: Preview deployment
    if: github.event_name == 'pull_request'
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET 7 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Preview Deployment
        uses: pulumi/actions@v3
        with:
          command: preview
          stack-name: dev
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          work-dir: ./Splitracker.Deploy
          config-map: |
            version: {value: '${{ needs.build.outputs.version }}', secret: false}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  deploy_dev:
    name: Deploy to dev
    if: github.event_name != 'pull_request'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://dev-splitracker.do.klauser.link
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET 7 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Perform Deployment
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: dev
          work-dir: ./Splitracker.Deploy
          config-map: |
            version: {value: '${{ needs.build.outputs.version }}', secret: false}          
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  deploy_prod:
    name: Deploy to prod
    if: github.event_name != 'pull_request'
    needs: [build, deploy_dev]
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://splitracker.klauser.link
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET 7 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Install doctl
        if: github.event_name != 'pull_request'
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Perform Deployment
        uses: pulumi/actions@v3
        if: github.event_name != 'pull_request'
        with:
          command: up
          stack-name: prod
          work-dir: ./Splitracker.Deploy
          config-map: |
            version: {value: '${{ needs.build.outputs.version }}', secret: false}          
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}