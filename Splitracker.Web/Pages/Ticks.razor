@page "/Ticks"
@using Splitracker.Web.Shared.Characters
@using Splitracker.Web.Shared.Timelines
@using Splitracker.Domain
@using System.Collections.Immutable

<PageTitle>Ticks - Splitracker</PageTitle>

@if (handle != null)
{
    <CascadingValue
        TValue="ITimelineDispatcher"
        Value="@this"
        IsFixed="@true">
        <MudExpansionPanels MultiExpansion="@true">
            <CascadingValue
                TValue="ICharacterCommandRouter"
                IsFixed="true"
                Value="@this">
                <MudExpansionPanel
                    @bind-IsExpanded="characterEditPanelOpen">
                    <TitleContent>
                        <div
                            class="d-flex gap-2 align-center align-content-center justify-start">
                            <MudText
                                Class="flex-none"
                                Typo="@Typo.h6">
                                Deine<br/>Charaktere
                            </MudText>
                            <MudAvatarGroup
                                Class="flex-grow-1"
                                Max="3"
                                Spacing="3">
                                @foreach (var c in PlayerCharacters)
                                {
                                    <CharacterAvatar
                                        @key="c.Id"
                                        Character="@c"/>
                                }
                            </MudAvatarGroup>
                        </div>
                    </TitleContent>
                    <ChildContent>
                        <div class="d-flex flex-row flex-wrap gap-4">
                        @foreach (var character in PlayerCharacters)
                        {
                            <CharacterCard
                                @key="character.Id"
                                CharacterHandle="@(new NonSubscribingCharacterHandle(character))"
                                EditMode="@false"/>
                        }
                        </div>
                    </ChildContent>
                </MudExpansionPanel>
            </CascadingValue>
            @if (handle.Timeline.Ready.Count > 0)
            {
                <TimelineReadyCharacters
                    Characters="@handle.Timeline.Ready"
                    SelectedTick="@selectedTick"/>
            }
        </MudExpansionPanels>
        <TimelinePreview
            Timeline="handle.Timeline"
            OnTickSelected="@tickSelected"/>

        @* add character *@
        <MudBadge
            Icon="@Icons.Material.Filled.Add"
            Bordered="@true"
            Overlap="@true"
            Color="@Color.Primary"
            Style="right: 6.5rem; bottom: 1.5rem;"
            Class="fixed z-100">
            <MudFab
                DisableRipple="@true"
                StartIcon="@Icons.Material.Filled.EmojiPeople"
                Color="@Color.Primary"
                @onclick="toggleAddCharacterPanel"/>
        </MudBadge>

        @* add effect *@
        <MudBadge
            Icon="@Icons.Material.Filled.Add"
            Bordered="@true"
            Overlap="@true"
            Color="@Color.Primary"
            Style="right: 1.5rem; bottom: 1.5rem;"
            Class="fixed z-100">
            <MudFab
                DisableRipple="@true"
                StartIcon="@Icons.Material.Filled.CrisisAlert"
                Color="@Color.Primary"
                @onclick="toggleAddEffectPanel"/>
            @* Note: all of the popovers are attached to the rightmost FAB *@
            <MudPopover
                Open="@addCharacterPanelOpen"
                AnchorOrigin="@Origin.TopRight"
                TransformOrigin="@Origin.BottomRight"
                Fixed="@true"
                Style="max-width: 320px; z-index: 500">
                <CascadingValue
                    TValue="ITimelineDispatcher"
                    Value="@this"
                    IsFixed="@true">
                    <TimelineAddCharacterCard
                        SelectedTick="@((selectedTick ?? handle.Timeline.Ticks.FirstOrDefault())?.At ?? 1)"
                        OnCharacterAdded="() => addCharacterPanelOpen = false"/>
                </CascadingValue>
            </MudPopover>
            <MudPopover
                Open="@(addEffectPanelOpen)"
                AnchorOrigin="@Origin.TopRight"
                TransformOrigin="@Origin.BottomRight"
                Fixed="@true"
                Style="max-width: 320px; z-index: 500">
                <CascadingValue
                    TValue="ITimelineDispatcher"
                    Value="@this"
                    IsFixed="@true">
                    <TimelineCreateEffectCard
                        TimelineCharacters="@handle.Timeline.Characters.Values.ToImmutableArray()"
                        SelectedTick="@((selectedTick ?? handle.Timeline.Ticks.FirstOrDefault())?.At ?? 1)"
                        OnEffectCreated="() => addEffectPanelOpen = false"/>
                </CascadingValue>
            </MudPopover>
        </MudBadge>
    </CascadingValue>
}
else
{
    <MudProgressCircular
        Size="@Size.Large"
        Indeterminate="@true"/>
}