@page "/Ticks"
@using Splitracker.Web.Shared.Characters
@using Splitracker.Domain

<PageTitle>Ticks - Splitracker</PageTitle>

<MudStack
    Row="@true">
    @if (handle != null)
    {
        var timelineWithTracks = allocateTracks(handle.Timeline.Ticks).ToList();
        <MultiTimeline
            DisableModifiers="@true"
            TimelinePosition="@TimelinePosition.Alternate"
            TimelineAlign="@TimelineAlign.Start"
            Labels="@timelineLabels(timelineWithTracks)">
            @foreach (var (track, lastOffset) in timelineWithTracks.GroupBy(y => y.Track).Select(track => (track.Key, track.Max(t => t.Offset))))
            {
                <MultiTimelineTrack
                    @key="@track"
                    Index="@track"
                    Length="@(track == 0 ? timelineWithTracks.Count : lastOffset + 1)"/>
            }
            @foreach (var (tick, track, offset) in timelineWithTracks)
            {
                @if (tick is not Empty)
                {
                    <MultiTimelineItem
                        @key="tick.ToString()"
                        Track="@track"
                        Offset="@offset"
                        Size="@Size.Medium">
                        <ItemDot>
                            @if (tick is Tick.IHasCharacter { Character: var c})
                            {
                                <MudAvatar>
                                    @string.Join("", c.Name.ToCharArray().Where(ch => char.IsUpper(ch) || char.IsDigit(ch)).Take(2))
                                </MudAvatar>
                            }
                            else if (tick is Tick.IHasEffect)
                            {
                                <MudIcon
                                    Icon="@Icons.Material.Filled.CrisisAlert"/>
                            }
                        </ItemDot>
                        <ItemContent>
                            <TickSummary
                                Tick="@tick"/>
                        </ItemContent>
                    </MultiTimelineItem>
                }
                else
                {
                    <MultiTimelineItem
                        @key="@($"synth-tick:{tick.At}")"
                        Track="@track"
                        Offset="@offset"
                        Size="@Size.Small"
                        Variant="Variant.Outlined"/>
                }
            }
        </MultiTimeline>
    }
</MudStack>