@using Splitracker.Domain.Commands

<MudCard>
    <MudCardContent>
        @if (Channeled == 1)
        {
            <text>Einen kanalisierten Punkt in einen erschöpften Punkt umwandeln</text>
        }
        else
        {
            <text>@Channeled kanalisierte Punkte in @Channeled erschöpfte Punkte umwandeln</text>
        }
    </MudCardContent>
    <MudCardActions>
        <MudButton StartIcon="@Icons.Material.Filled.SyncDisabled" Variant="Variant.Text" @onclick="callbackAsync">Ja, gerne!</MudButton>
    </MudCardActions>
</MudCard>

@code {

    [Parameter]
    [EditorRequired]
    public required int Index { get; set; }
    
    [Parameter]
    [EditorRequired]
    public required PoolType Type { get; set; }
    
    [Parameter]
    [EditorRequired]
    public required int Channeled { get; set; }
    
    [CascadingParameter]
    public required ICharacterCommandRouter Router { get; set; }

    async Task callbackAsync()
    {
        await Router.ApplyAsync(new Domain.Commands.StopChanneling(null!, Type, Channeled));
    }

}