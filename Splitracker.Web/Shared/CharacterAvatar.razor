@using Splitracker.Domain

@{
    var penalty = Character.Penalty;
}
<MudBadge Visible="@(ShowPenalty && penalty > 0)" @onclick="avatarClicked" Overlap="@true"
          Origin="@Origin.BottomCenter"
          Bordered="true" Color="Color.Error" Content="@($"-{Character.Penalty}")">
    <MudAvatar Color="@(IsSelected ? Color.Primary : Color.Default)">
        @string.Join("", Character.Name.ToCharArray().Where(ch => char.IsUpper(ch) || char.IsDigit(ch)).Take(2))
    </MudAvatar>
</MudBadge>

@code {
    [Parameter]
    [EditorRequired]
    public required Character Character { get; set; }
    
    [Parameter]
    public bool IsSelected { get; set; }
    
    [Parameter]
    public EventCallback<Character> OnClick { get; set; }
    
    [Parameter]
    public bool ShowPenalty { get; set; }

    async Task avatarClicked()
    {
        await OnClick.InvokeAsync(Character);
    }
}